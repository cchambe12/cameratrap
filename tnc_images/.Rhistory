b_nao*nao[n] + b_space*space[n] + b_elev*elev[n] + b_dist*dist[n], sig_y)
}
y[n] <- rpois(1, a=L, b=13, a_species[spnum[n]] + b_cc*cc[n] + b_mst*mst[n] +
b_nao*nao[n] + b_space*space[n] + b_elev*elev[n] + b_dist*dist[n], sig_y)
for (n in 1:N){
y[n] <- rpois(1, a_species[spnum[n]] + b_cc*cc[n] + b_mst*mst[n] +
b_nao*nao[n] + b_space*space[n] + b_elev*elev[n] + b_dist*dist[n])
}
warnings()
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
library(truncnorm)
nsp = 6     #total number of species
years= 50 #number of years
nind = 1500 # number of individuals per species
N = nsp*years*nind
spnum <- rep(c(1:nsp), each=nind*years)   #list of species numbers for each observation (length N)
cc <- rep(c(0,1),each=N/2) #assign half to pre 1984 (0) and half to post (1)
mst <- rnorm(N, 8, 1.5)
nao <- rnorm(N, 0.08, 0.3)
space <- rnorm(N, -0.03, 0.33)
elev <- rnorm(N, 260, 215)
dist <- rnorm(N, 13751.49, 270)
################ To fix below this point.... ############
#predictors (t=treatment,s=sex,r=year)
b_cc = -2
b_mst = -6
b_nao = 1
b_space = 0.5
b_elev = 4
b_dist = -2
#mu_a and sig_a are the mean and variance of the intercept across sites
mu_a <- 2
sig_a <- 1
#for each island, draw the intercept from the appropriate site mean and sd
a_species <- rep(0,nsp)
#assume same within-site variance for all sites
for (j in 1:nsp){
a_species[j] <- rnorm(1,mu_a, sig_a);
}
#simulate data
sig_y <- 1 #residual variance
y <- rep(0,N)
L <-0 # lower bound on response variable
for (n in 1:N){
y[n] <- rpois(1, a_species[spnum[n]] + b_cc*cc[n] + b_mst*mst[n] +
b_nao*nao[n] + b_space*space[n] + b_elev*elev[n] + b_dist*dist[n])
}
fake<-data.frame(fs = y, cc = cc, mst = mst, nao = nao, space = space, elev = elev, dist = dist)
for (n in 1:N){
y[n] <- rtruncnorm(1, a=L, b=13, a_species[spnum[n]] + b_cc*cc[n] + b_mst*mst[n] +
b_nao*nao[n] + b_space*space[n] + b_elev*elev[n] + b_dist*dist[n], sig_y)
}
fake<-data.frame(fs = y, cc = cc, mst = mst, nao = nao, space = space, elev = elev, dist = dist)
nsp = 6     #total number of species
years= 50 #number of years
nind = 1500 # number of individuals per species
N = nsp*years*nind
spnum <- rep(c(1:nsp), each=nind*years)   #list of species numbers for each observation (length N)
cc <- rep(c(0,1),each=N/2) #assign half to pre 1984 (0) and half to post (1)
mst <- rnorm(N, 8, 1.5)
nao <- rnorm(N, 0.08, 0.3)
space <- rnorm(N, -0.03, 0.33)
elev <- rnorm(N, 260, 215)
dist <- rnorm(N, 13751.49, 270)
################ To fix below this point.... ############
#predictors (t=treatment,s=sex,r=year)
b_cc = -2
b_mst = -6
b_nao = 2
b_space = 1
b_elev = 4
b_dist = -2
#mu_a and sig_a are the mean and variance of the intercept across sites
mu_a <- 8
sig_a <- 3
#for each island, draw the intercept from the appropriate site mean and sd
a_species <- rep(0,nsp)
#assume same within-site variance for all sites
for (j in 1:nsp){
a_species[j] <- rnorm(1,mu_a, sig_a);
}
#simulate data
sig_y <- 1 #residual variance
y <- rep(0,N)
L <-0 # lower bound on response variable
for (n in 1:N){
y[n] <- rtruncnorm(1, a=L, b=13, a_species[spnum[n]] + b_cc*cc[n] + b_mst*mst[n] +
b_nao*nao[n] + b_space*space[n] + b_elev*elev[n] + b_dist*dist[n], sig_y)
}
fake<-data.frame(fs = y, cc = cc, mst = mst, nao = nao, space = space, elev = elev, dist = dist)
nsp = 6     #total number of species
years= 50 #number of years
nind = 1500 # number of individuals per species
N = nsp*years*nind
spnum <- rep(c(1:nsp), each=nind*years)   #list of species numbers for each observation (length N)
cc <- rep(c(0,1),each=N/2) #assign half to pre 1984 (0) and half to post (1)
mst <- rnorm(N, 8, 1.5)
nao <- rnorm(N, 0.08, 0.3)
space <- rnorm(N, -0.03, 0.33)
elev <- rnorm(N, 260, 215)
dist <- rnorm(N, 13751.49, 270)
################ To fix below this point.... ############
#predictors (t=treatment,s=sex,r=year)
b_cc = -1
b_mst = -3
b_nao = 2
b_space = 1
b_elev = 2
b_dist = -1
#mu_a and sig_a are the mean and variance of the intercept across sites
mu_a <- 5
sig_a <- 2
#for each island, draw the intercept from the appropriate site mean and sd
a_species <- rep(0,nsp)
#assume same within-site variance for all sites
for (j in 1:nsp){
a_species[j] <- rnorm(5,mu_a, sig_a);
}
#simulate data
sig_y <- 1 #residual variance
y <- rep(0,N)
L <-0 # lower bound on response variable
for (n in 1:N){
y[n] <- rtruncnorm(5, a=L, b=13, a_species[spnum[n]] + b_cc*cc[n] + b_mst*mst[n] +
b_nao*nao[n] + b_space*space[n] + b_elev*elev[n] + b_dist*dist[n], sig_y)
}
fake<-data.frame(fs = y, cc = cc, mst = mst, nao = nao, space = space, elev = elev, dist = dist)
for (n in 1:N){
y[n] <- rpois(5, a_species[spnum[n]] + b_cc*cc[n] + b_mst*mst[n] +
b_nao*nao[n] + b_space*space[n] + b_elev*elev[n] + b_dist*dist[n])
}
y
a_species[spnum[n]]
b_cc*cc[n]
b_mst*mst[n]
rm(list=ls()) # remove everything currently held in the R memory
options(stringsAsFactors=FALSE)
library(truncnorm)
nsp = 6     #total number of species
years= 50 #number of years
nind = 1500 # number of individuals per species
N = nsp*years*nind
spnum <- rep(c(1:nsp), each=nind*years)   #list of species numbers for each observation (length N)
cc <- rep(c(0,1),each=N/2) #assign half to pre 1984 (0) and half to post (1)
mst <- rnorm(N, 8, 1.5)
nao <- rnorm(N, 0.08, 0.3)
space <- rnorm(N, -0.03, 0.33)
elev <- rnorm(N, 260, 215)
dist <- rnorm(N, 13751.49, 270)
################ To fix below this point.... ############
#predictors (t=treatment,s=sex,r=year)
b_cc = -0.8
b_mst = -1.2
b_nao = 0.09
b_space = 0.01
b_elev = 0.6
b_dist = -0.4
#mu_a and sig_a are the mean and variance of the intercept across sites
mu_a <- 5
sig_a <- 2
#for each island, draw the intercept from the appropriate site mean and sd
a_species <- rep(0,nsp)
#assume same within-site variance for all sites
for (j in 1:nsp){
a_species[j] <- rnorm(5,mu_a, sig_a);
}
#simulate data
sig_y <- 1 #residual variance
y <- rep(0,N)
L <-0 # lower bound on response variable
for (n in 1:N){
y[n] <- rtruncnorm(5, a_species[spnum[n]] + b_cc*cc[n] + b_mst*mst[n] +
b_nao*nao[n] + b_space*space[n] + b_elev*elev[n] + b_dist*dist[n])
}
fake<-data.frame(fs = y, cc = cc, mst = mst, nao = nao, space = space, elev = elev, dist = dist)
#mu_a and sig_a are the mean and variance of the intercept across sites
mu_a <- 7
sig_a <- 2
#for each island, draw the intercept from the appropriate site mean and sd
a_species <- rep(0,nsp)
#assume same within-site variance for all sites
for (j in 1:nsp){
a_species[j] <- rnorm(5,mu_a, sig_a);
}
#simulate data
sig_y <- 1 #residual variance
y <- rep(0,N)
L <-0 # lower bound on response variable
for (n in 1:N){
y[n] <- rtruncnorm(7, a_species[spnum[n]] + b_cc*cc[n] + b_mst*mst[n] +
b_nao*nao[n] + b_space*space[n] + b_elev*elev[n] + b_dist*dist[n])
}
warnings()
y[n] <- rtruncnorm(7, a=L, b=13 a_species[spnum[n]] + b_cc*cc[n] + b_mst*mst[n] +
b_nao*nao[n] + b_space*space[n] + b_elev*elev[n] + b_dist*dist[n], sig_y)
for (n in 1:N){
y[n] <- rtruncnorm(7, a=L, b=13, a_species[spnum[n]] + b_cc*cc[n] + b_mst*mst[n] +
b_nao*nao[n] + b_space*space[n] + b_elev*elev[n] + b_dist*dist[n], sig_y)
}
fake<-data.frame(fs = y, cc = cc, mst = mst, nao = nao, space = space, elev = elev, dist = dist)
#simulate data
sig_y <- 3 #residual variance
for (n in 1:N){
y[n] <- rtruncnorm(7, a=L, b=13, a_species[spnum[n]] + b_cc*cc[n] + b_mst*mst[n] +
b_nao*nao[n] + b_space*space[n] + b_elev*elev[n] + b_dist*dist[n], sig_y)
}
fake<-data.frame(fs = y, cc = cc, mst = mst, nao = nao, space = space, elev = elev, dist = dist)
a_species[spnum[n]]
b_cc*cc[n]
b_mst*mst[n]
b_nao*nao[n]
b_space*space[n]
b_elev*elev[n]
b_dist*dist[n]
## Libraries
### 15 Oct 2018 - can't install brms, rstanarm or I think rstan properly
require(rstan)
require(brms)
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
bb<-read.csv("~/Documents/git/regionalrisk/analyses/output/fs_space_new.csv", header=TRUE)
#bb<-read.csv("~/Documents/git/regionalrisk/analyses/output/fs_space_new.csv", header=TRUE)
bb<-subset(bb, select=c("species", "lat", "elev", "year", "mst", "cc", "fs.count", "nao",
"distkm", "space"))
#bb<-read.csv("~/Documents/git/regionalrisk/analyses/output/fs_space_new.csv", header=TRUE)
bb<-subset(bb, select=c("species", "lat", "elev", "year", "mst", "cc", "fs.count", "nao",
"distkm", "eigen"))
bb$fs<-ifelse(bb$fs.count>0, 1, 0)
bb$nao.z <- (bb$nao-mean(bb$nao,na.rm=TRUE))/(2*sd(bb$nao,na.rm=TRUE))
bb$mat.z <- (bb$mst-mean(bb$mst,na.rm=TRUE))/(2*sd(bb$mst,na.rm=TRUE))
bb$cc.z <- (bb$cc-mean(bb$cc,na.rm=TRUE))/(2*sd(bb$cc,na.rm=TRUE))
bb$elev.z <- (bb$elev-mean(bb$elev,na.rm=TRUE))/(2*sd(bb$elev,na.rm=TRUE))
bb$lat.z <- (bb$lat-mean(bb$lat,na.rm=TRUE))/(2*sd(bb$lat,na.rm=TRUE))
bb$dist.z <-(bb$distkm-mean(bb$distkm,na.rm=TRUE))/(2*sd(bb$distkm,na.rm=TRUE))
bb$space.z <-(bb$eigen-mean(bb$eigen,na.rm=TRUE))/(2*sd(bb$eigen,na.rm=TRUE))
bb<-bb[sample(nrow(bb), 800), ]
pois.test<-brm(fs.count ~ nao.z + mat.z + dist.z + space.z + elev.z +
cc.z + species +
mat.z:species + dist.z:species + space.z:species + elev.z:species + cc.z:species +
mat.z:cc.z + dist.z:cc.z + space.z:cc.z + elev.z:cc.z, data=bb, chains=2, cores=2,
family=poisson(), iter = 4500, warmup=2000, thin=1.5,
priors = c(prior(poisson(0,13))))
pois.test<-brm(fs.count ~ nao.z + mat.z + dist.z + space.z + elev.z +
cc.z + species +
mat.z:species + dist.z:species + space.z:species + elev.z:species + cc.z:species +
mat.z:cc.z + dist.z:cc.z + space.z:cc.z + elev.z:cc.z, data=bb, chains=2, cores=2,
family=poisson(), iter = 4500, warmup=2000, thin=1.5,
prior = c(prior(poisson(0,13))))
pois.test<-brm(fs.count ~ nao.z + mat.z + dist.z + space.z + elev.z +
cc.z + species +
mat.z:species + dist.z:species + space.z:species + elev.z:species + cc.z:species +
mat.z:cc.z + dist.z:cc.z + space.z:cc.z + elev.z:cc.z, data=bb, chains=2, cores=2,
family=poisson(), iter = 4500, warmup=2000, thin=1.5,
prior = set_prior(cauchy(0,13)))
pois.test<-brm(fs.count ~ nao.z + mat.z + dist.z + space.z + elev.z +
cc.z + species +
mat.z:species + dist.z:species + space.z:species + elev.z:species + cc.z:species +
mat.z:cc.z + dist.z:cc.z + space.z:cc.z + elev.z:cc.z, data=bb, chains=2, cores=2,
family=poisson(), iter = 4500, warmup=2000, thin=1.5,
prior = prior(cauchy(0,13)))
pois.test
pp_check(pois.test)
prior<-get_prior(fs.count ~ nao.z + mat.z + dist.z + space.z + elev.z +
cc.z + species +
mat.z:species + dist.z:species + space.z:species + elev.z:species + cc.z:species +
mat.z:cc.z + dist.z:cc.z + space.z:cc.z + elev.z:cc.z, data=bb, family=poisson())
pois.test<-brm(fs.count ~ nao.z + mat.z + dist.z + space.z + elev.z +
cc.z + species +
mat.z:species + dist.z:species + space.z:species + elev.z:species + cc.z:species +
mat.z:cc.z + dist.z:cc.z + space.z:cc.z + elev.z:cc.z, data=bb, chains=2, cores=2,
family=poisson(), iter = 4500, warmup=2000, thin=1.5,
prior = prior)
pois.test
bern.test<-brm(fs ~ nao.z + mat.z + dist.z + space.z + elev.z +
cc.z + species +
mat.z:species + dist.z:species + space.z:species + elev.z:species + cc.z:species +
mat.z:cc.z + dist.z:cc.z + space.z:cc.z + elev.z:cc.z, data=bb, chains=2, cores=2,
family=bernoulli(), iter = 4500, warmup=2000, thin=5,
prior = prior(cauchy(0,1)))
bern.test
pp_check
pp_check(bern.test)
bb<-read.csv("~/Documents/git/regionalrisk/analyses/output/fs_space_new.csv", header=TRUE)
#bb<-read.csv("~/Documents/git/regionalrisk/analyses/output/fs_space_new.csv", header=TRUE)
bb<-subset(bb, select=c("species", "lat", "elev", "year", "mst", "cc", "fs.count", "nao",
"distkm", "eigen"))
bb$fs<-ifelse(bb$fs.count>0, 1, 0)
bb$nao.z <- (bb$nao-mean(bb$nao,na.rm=TRUE))/(2*sd(bb$nao,na.rm=TRUE))
bb$mat.z <- (bb$mst-mean(bb$mst,na.rm=TRUE))/(2*sd(bb$mst,na.rm=TRUE))
bb$cc.z <- (bb$cc-mean(bb$cc,na.rm=TRUE))/(2*sd(bb$cc,na.rm=TRUE))
bb$elev.z <- (bb$elev-mean(bb$elev,na.rm=TRUE))/(2*sd(bb$elev,na.rm=TRUE))
bb$lat.z <- (bb$lat-mean(bb$lat,na.rm=TRUE))/(2*sd(bb$lat,na.rm=TRUE))
bb$dist.z <-(bb$distkm-mean(bb$distkm,na.rm=TRUE))/(2*sd(bb$distkm,na.rm=TRUE))
bb$space.z <-(bb$eigen-mean(bb$eigen,na.rm=TRUE))/(2*sd(bb$eigen,na.rm=TRUE))
bb<-bb[sample(nrow(bb), 8000), ]
pois.test<-brm(fs.count ~ nao.z + mat.z + dist.z + space.z + elev.z +
cc.z + species +
mat.z:species + dist.z:species + space.z:species + elev.z:species + cc.z:species +
mat.z:cc.z + dist.z:cc.z + space.z:cc.z + elev.z:cc.z, data=bb, chains=2, cores=2,
family=poisson(), iter = 4500, warmup=2000, thin=5,
prior = prior(cauchy(0,13)))
pois.test<-brm(fs.count ~ nao.z + mat.z + dist.z + space.z + elev.z +
cc.z + species +
mat.z:species + dist.z:species + space.z:species + elev.z:species + cc.z:species +
mat.z:cc.z + dist.z:cc.z + space.z:cc.z + elev.z:cc.z, data=bb, chains=2, cores=2,
family=poisson(), iter = 4500, warmup=2000, thin=50,
prior = prior(cauchy(0,13)))
pois.test<-brm(fs.count ~ nao.z + mat.z + dist.z + space.z + elev.z +
cc.z + species +
mat.z:species + dist.z:species + space.z:species + elev.z:species + cc.z:species +
mat.z:cc.z + dist.z:cc.z + space.z:cc.z + elev.z:cc.z, data=bb, chains=2, cores=2,
family=poisson(), iter = 4500, warmup=2000, thin=0.5,
prior = prior(cauchy(0,13)))
pois.test<-brm(fs.count ~ nao.z + mat.z + dist.z + space.z + elev.z +
cc.z + species +
mat.z:species + dist.z:species + space.z:species + elev.z:species + cc.z:species +
mat.z:cc.z + dist.z:cc.z + space.z:cc.z + elev.z:cc.z, data=bb, chains=2, cores=2,
family=poisson(), iter = 4500, warmup=2000, thin=3000,
prior = prior(cauchy(0,13)))
rm(list=ls())
options(stringsAsFactors = FALSE)
## Libraries
### 15 Oct 2018 - can't install brms, rstanarm or I think rstan properly
require(rstan)
require(brms)
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
bb<-read.csv("~/Documents/git/regionalrisk/analyses/output/fs_space_new.csv", header=TRUE)
#bb<-read.csv("~/Documents/git/regionalrisk/analyses/output/fs_space_new.csv", header=TRUE)
bb<-subset(bb, select=c("species", "lat", "elev", "year", "mst", "cc", "fs.count", "nao",
"distkm", "eigen"))
bb$fs<-ifelse(bb$fs.count>0, 1, 0)
bb$nao.z <- (bb$nao-mean(bb$nao,na.rm=TRUE))/(2*sd(bb$nao,na.rm=TRUE))
bb$mat.z <- (bb$mst-mean(bb$mst,na.rm=TRUE))/(2*sd(bb$mst,na.rm=TRUE))
bb$cc.z <- (bb$cc-mean(bb$cc,na.rm=TRUE))/(2*sd(bb$cc,na.rm=TRUE))
bb$elev.z <- (bb$elev-mean(bb$elev,na.rm=TRUE))/(2*sd(bb$elev,na.rm=TRUE))
bb$lat.z <- (bb$lat-mean(bb$lat,na.rm=TRUE))/(2*sd(bb$lat,na.rm=TRUE))
bb$dist.z <-(bb$distkm-mean(bb$distkm,na.rm=TRUE))/(2*sd(bb$distkm,na.rm=TRUE))
bb$space.z <-(bb$eigen-mean(bb$eigen,na.rm=TRUE))/(2*sd(bb$eigen,na.rm=TRUE))
bb<-bb[sample(nrow(bb), 8000), ]
pois.test<-brm(fs.count ~ nao.z + mat.z + dist.z + space.z + elev.z +
cc.z + species +
mat.z:species + dist.z:species + space.z:species + elev.z:species + cc.z:species +
mat.z:cc.z + dist.z:cc.z + space.z:cc.z + elev.z:cc.z, data=bb, chains=2, cores=2,
family=poisson(), iter = 4500, warmup=2000, thin=10,
prior = prior(cauchy(0,13)))
require(rstan)
require(brms)
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
bb<-read.csv("~/Documents/git/regionalrisk/analyses/output/fs_space_new.csv", header=TRUE)
#bb<-read.csv("~/Documents/git/regionalrisk/analyses/output/fs_space_new.csv", header=TRUE)
bb<-subset(bb, select=c("species", "lat", "elev", "year", "mst", "cc", "fs.count", "nao",
"distkm", "eigen"))
bb$fs<-ifelse(bb$fs.count>0, 1, 0)
bb$nao.z <- (bb$nao-mean(bb$nao,na.rm=TRUE))/(2*sd(bb$nao,na.rm=TRUE))
bb$mat.z <- (bb$mst-mean(bb$mst,na.rm=TRUE))/(2*sd(bb$mst,na.rm=TRUE))
bb$cc.z <- (bb$cc-mean(bb$cc,na.rm=TRUE))/(2*sd(bb$cc,na.rm=TRUE))
bb$elev.z <- (bb$elev-mean(bb$elev,na.rm=TRUE))/(2*sd(bb$elev,na.rm=TRUE))
bb$lat.z <- (bb$lat-mean(bb$lat,na.rm=TRUE))/(2*sd(bb$lat,na.rm=TRUE))
bb$dist.z <-(bb$distkm-mean(bb$distkm,na.rm=TRUE))/(2*sd(bb$distkm,na.rm=TRUE))
bb$space.z <-(bb$eigen-mean(bb$eigen,na.rm=TRUE))/(2*sd(bb$eigen,na.rm=TRUE))
require(rstan)
require(brms)
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
bb<-read.csv("~/Documents/git/regionalrisk/analyses/output/fs_space_new.csv", header=TRUE)
#bb<-read.csv("~/Documents/git/regionalrisk/analyses/output/fs_space_new.csv", header=TRUE)
bb<-subset(bb, select=c("species", "lat", "elev", "year", "mst", "cc", "fs.count", "nao",
"distkm", "eigen"))
bb$fs<-ifelse(bb$fs.count>0, 1, 0)
bb$nao.z <- (bb$nao-mean(bb$nao,na.rm=TRUE))/(2*sd(bb$nao,na.rm=TRUE))
bb$mat.z <- (bb$mst-mean(bb$mst,na.rm=TRUE))/(2*sd(bb$mst,na.rm=TRUE))
bb$cc.z <- (bb$cc-mean(bb$cc,na.rm=TRUE))/(2*sd(bb$cc,na.rm=TRUE))
bb$elev.z <- (bb$elev-mean(bb$elev,na.rm=TRUE))/(2*sd(bb$elev,na.rm=TRUE))
bb$lat.z <- (bb$lat-mean(bb$lat,na.rm=TRUE))/(2*sd(bb$lat,na.rm=TRUE))
bb$dist.z <-(bb$distkm-mean(bb$distkm,na.rm=TRUE))/(2*sd(bb$distkm,na.rm=TRUE))
bb$space.z <-(bb$eigen-mean(bb$eigen,na.rm=TRUE))/(2*sd(bb$eigen,na.rm=TRUE))
library(lme4)
logs<-glm(fs ~ nao.z + mat.z + dist.z + space.z + elev.z +
cc.z + species +
mat.z:species + dist.z:species + space.z:species + elev.z:species + cc.z:species +
mat.z:cc.z + dist.z:cc.z + space.z:cc.z + elev.z:cc.z, data=bb, family=binomial(link="logit"))
logs
summary(logs)
poisbase<-glm(fs.count ~ nao.z + mat.z + dist.z + space.z + elev.z +
cc.z + species +
mat.z:species + dist.z:species + space.z:species + elev.z:species + cc.z:species +
mat.z:cc.z + dist.z:cc.z + space.z:cc.z + elev.z:cc.z, data=bb, family=poisson(link="log"))
summary(poisbase)
poisnodist<-glm(fs.count ~ nao.z + mat.z + space.z + elev.z +
cc.z + species +
mat.z:species + space.z:species + elev.z:species + cc.z:species +
mat.z:cc.z + space.z:cc.z + elev.z:cc.z, data=bb, family=poisson(link="log"))
summary(poisnodist);summary(poisbase)
bb<-bb[sample(nrow(bb), 800), ]
pois.test<-brm(fs.count ~ nao.z + mat.z + dist.z + space.z + elev.z +
cc.z + species +
mat.z:species + dist.z:species + space.z:species + elev.z:species + cc.z:species +
mat.z:cc.z + dist.z:cc.z + space.z:cc.z + elev.z:cc.z, data=bb, chains=2, cores=2,
family=poisson(), iter = 5000, warmup=2500,
prior = prior(normal(-10,10), class=b), prior(normal(-5,5), class="Intercept"))
pois.test<-brm(fs.count ~ nao.z + mat.z + dist.z + space.z + elev.z +
cc.z + species +
mat.z:species + dist.z:species + space.z:species + elev.z:species + cc.z:species +
mat.z:cc.z + dist.z:cc.z + space.z:cc.z + elev.z:cc.z, data=bb, chains=2, cores=2,
family=poisson(), iter = 5000, warmup=2500,
prior = prior(normal(-10,10), class=b), prior(normal(-5,5), coef="Intercept"))
pois.test<-brm(fs.count ~ nao.z + mat.z + dist.z + space.z + elev.z +
cc.z + species +
mat.z:species + dist.z:species + space.z:species + elev.z:species + cc.z:species +
mat.z:cc.z + dist.z:cc.z + space.z:cc.z + elev.z:cc.z, data=bb, chains=2, cores=2,
family=poisson(), iter = 5000, warmup=2500,
prior = prior(normal(-10,10), class=b), prior(normal(-5,5), class=b, coef="Intercept"))
pois.test<-brm(fs.count ~ nao.z + mat.z + dist.z + space.z + elev.z +
cc.z + species +
mat.z:species + dist.z:species + space.z:species + elev.z:species + cc.z:species +
mat.z:cc.z + dist.z:cc.z + space.z:cc.z + elev.z:cc.z, data=bb, chains=2, cores=2,
family=poisson(), iter = 5000, warmup=2500,
prior = prior(normal(-10,10), class=b))
pois.test
hist(bb$nao.z)
hist(bb$mat.z)
hist(bb$space.z)
hist(bb$elev.z)
hist(bb$cc.z)
require(rstan)
require(brms)
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
bb<-read.csv("~/Documents/git/regionalrisk/analyses/output/fs_space_new.csv", header=TRUE)
#bb<-read.csv("~/Documents/git/regionalrisk/analyses/output/fs_space_new.csv", header=TRUE)
bb<-subset(bb, select=c("species", "lat", "elev", "year", "mst", "cc", "fs.count", "nao",
"distkm", "eigen"))
bb$fs<-ifelse(bb$fs.count>0, 1, 0)
bb$nao.z <- (bb$nao-mean(bb$nao,na.rm=TRUE))/(2*sd(bb$nao,na.rm=TRUE))
bb$mat.z <- (bb$mst-mean(bb$mst,na.rm=TRUE))/(2*sd(bb$mst,na.rm=TRUE))
bb$cc.z <- (bb$cc-mean(bb$cc,na.rm=TRUE))/(2*sd(bb$cc,na.rm=TRUE))
bb$elev.z <- (bb$elev-mean(bb$elev,na.rm=TRUE))/(2*sd(bb$elev,na.rm=TRUE))
bb$lat.z <- (bb$lat-mean(bb$lat,na.rm=TRUE))/(2*sd(bb$lat,na.rm=TRUE))
bb$dist.z <-(bb$distkm-mean(bb$distkm,na.rm=TRUE))/(2*sd(bb$distkm,na.rm=TRUE))
bb$space.z <-(bb$eigen-mean(bb$eigen,na.rm=TRUE))/(2*sd(bb$eigen,na.rm=TRUE))
bb<-bb[sample(nrow(bb), 15000), ]
pois.test<-brm(fs.count ~ nao.z + mat.z + dist.z + space.z + elev.z +
cc.z + species +
mat.z:species + dist.z:species + space.z:species + elev.z:species + cc.z:species +
mat.z:cc.z + dist.z:cc.z + space.z:cc.z + elev.z:cc.z, data=bb, chains=2, cores=2,
family=poisson(), iter = 4000, warmup=2500,
prior = prior(normal(-6,6), class=b))
poisbase<-glm(fs.count ~ nao.z + mat.z + dist.z + space.z + elev.z +
cc.z + species +
mat.z:species + dist.z:species + space.z:species + elev.z:species + cc.z:species +
mat.z:cc.z + dist.z:cc.z + space.z:cc.z + elev.z:cc.z, data=bb, family=negative.binomial())
poisbase<-glm(fs.count ~ nao.z + mat.z + dist.z + space.z + elev.z +
cc.z + species +
mat.z:species + dist.z:species + space.z:species + elev.z:species + cc.z:species +
mat.z:cc.z + dist.z:cc.z + space.z:cc.z + elev.z:cc.z, data=bb, family=negative.binomial(theta=2))
summary(poisbase)
poisbase<-glm(fs ~ nao.z + mat.z + dist.z + space.z + elev.z +
cc.z + species +
mat.z:species + dist.z:species + space.z:species + elev.z:species + cc.z:species +
mat.z:cc.z + dist.z:cc.z + space.z:cc.z + elev.z:cc.z, data=bb, family=negative.binomial(theta=2))
summary(poisbase)
poisbase<-glm(fs ~ nao.z + mat.z + dist.z + space.z + elev.z +
cc.z + species +
mat.z:species + dist.z:species + space.z:species + elev.z:species + cc.z:species +
mat.z:cc.z + dist.z:cc.z + space.z:cc.z + elev.z:cc.z, data=bb, family=quasibinomial())
bb<-read.csv("~/Documents/git/regionalrisk/analyses/output/fs_space_new.csv", header=TRUE)
bb<-subset(bb, select=c("species", "lat", "elev", "year", "mst", "cc", "fs.count", "nao",
"distkm", "eigen"))
bb$fs<-ifelse(bb$fs.count>0, 1, 0)
bb$nao.z <- (bb$nao-mean(bb$nao,na.rm=TRUE))/(2*sd(bb$nao,na.rm=TRUE))
bb$mat.z <- (bb$mst-mean(bb$mst,na.rm=TRUE))/(2*sd(bb$mst,na.rm=TRUE))
bb$cc.z <- (bb$cc-mean(bb$cc,na.rm=TRUE))/(2*sd(bb$cc,na.rm=TRUE))
bb$elev.z <- (bb$elev-mean(bb$elev,na.rm=TRUE))/(2*sd(bb$elev,na.rm=TRUE))
bb$lat.z <- (bb$lat-mean(bb$lat,na.rm=TRUE))/(2*sd(bb$lat,na.rm=TRUE))
bb$dist.z <-(bb$distkm-mean(bb$distkm,na.rm=TRUE))/(2*sd(bb$distkm,na.rm=TRUE))
bb$space.z <-(bb$eigen-mean(bb$eigen,na.rm=TRUE))/(2*sd(bb$eigen,na.rm=TRUE))
poisbase<-glm(fs ~ nao.z + mat.z + dist.z + space.z + elev.z +
cc.z + species +
mat.z:species + dist.z:species + space.z:species + elev.z:species + cc.z:species +
mat.z:cc.z + dist.z:cc.z + space.z:cc.z + elev.z:cc.z, data=bb, family=quasibinomial())
summary(poisbase)
rm(list=ls())
options(stringsAsFactors=FALSE)
## Load Libraries
library(dplyr)
library(tidyr)
# Set WD
setwd("~/Documents/git/cameratrap/tnc_images/")
## Start cleaning
tnc<- read.csv("All_images.csv", header=TRUE)
tnc <- stack(tnc)
tnc <- tnc[!(tnc$values==""),]
tnc$`Camera Trap Name` <- paste(tnc$values, tnc$ind, sep="_")
tnc$values <- NULL
tnc$ind <- NULL
tnc$Latitude <- 41.801757
tnc$Longitude <- -72.684274
cam8a <- tnc[grep("CAM08A", tnc$`Camera Trap Name`), ]
cam8b <- tnc[grep("CAM08B", tnc$`Camera Trap Name`), ]
cam8c <- tnc[grep("CAM08C", tnc$`Camera Trap Name`), ]
cam8d <- tnc[grep("CAM08D", tnc$`Camera Trap Name`), ]
cam8e <- tnc[grep("CAM08E", tnc$`Camera Trap Name`), ]
cam8f <- tnc[grep("CAM08F", tnc$`Camera Trap Name`), ]
write.csv(cam8a, file=("cam8a.csv"), row.names = FALSE)
write.csv(cam8b, file=("cam8b.csv"), row.names = FALSE)
write.csv(cam8c, file=("cam8c.csv"), row.names = FALSE)
write.csv(cam8d, file=("cam8d.csv"), row.names = FALSE)
write.csv(cam8e, file=("cam8e.csv"), row.names = FALSE)
write.csv(cam8f, file=("cam8f.csv"), row.names = FALSE)
